/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        ListNode first = null;
        ListNode last = null;
                    int carry = 0;
        while(l1!=null || l2!=null){
            
            int val1 = l1 == null?0:l1.val;
            int val2 = l2 == null?0:l2.val;
            int sum = val1+val2+carry;
            carry = sum/10;
            int remainder = sum%10;
            
            if(first == null){
                first = new ListNode(remainder);
                last = first;
            } else {
              
                last.next = new ListNode(remainder);
                last = last.next;
            }
            
            l1 = l1 !=null ? l1.next: null;
            l2 = l2 !=null ? l2.next: null;
            
        }
        
            if(carry>0){
                last.next = new ListNode(carry);
            }
            
            
           return first;     
                
        }
        
}
